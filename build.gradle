plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'dev.speakeasyapi'
version '1.2.3'


repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

dependencies {
    // Note (alexa): this is the speakeasy fork of the har-java library
    implementation files('lib/har-java.jar')
    implementation files('lib/speakeasy-schemas.jar')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.4') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation('org.slf4j:slf4j-api:1.7.36')
    runtimeOnly 'io.netty:netty-tcnative-boringssl-static:2.0.20.Final'
    implementation 'io.grpc:grpc-netty-shaded:1.45.1'
    implementation 'io.grpc:grpc-protobuf:1.45.1'
    implementation 'io.grpc:grpc-stub:1.45.1'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation files('./src/main/resources/commons-io-2.11.0.jar')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.springframework:spring-test:5.3.20'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.springframework.boot:spring-boot-test:2.7.1'
    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure:2.7.1'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    testImplementation 'com.google.guava:guava:31.1-jre'
}

test {
    useJUnitPlatform()
}

jar {
    enabled = true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {

    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

bootJar {
    enabled = false
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = 'dev.speakeasyapi'
            artifactId = 'speakeasy-java-sdk'

            version = '1.2.3'

            from components.java

            pom {
                name = 'speakeasy-java-sdk'
                description = 'A Java SDK for automating your API Operations'
                url = 'https://github.com/speakeasy-api/speakeasy-java-sdk'

                scm {
                    connection = 'git:git:https://github.com/speakeasy-api/speakeasy-java-sdk'
                    developerConnection = 'scm:git:https://github.com/speakeasy-api/speakeasy-java-sdk'
                    url = 'https://github.com/speakeasy-api/speakeasy-java-sdk'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'alexadrake'
                        name = 'Alexa Drake'
                        email = 'alexa@speakeasyapi.dev'
                    }
                    developer {
                        id = 'tristancartledge'
                        name = 'Tristan Cartledge'
                        email = 'tristan@speakeasyapi.dev'
                    }
                }
            }

//            artifact sourceJar
        }
    }

    repositories {
        maven {
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = project.properties['ossrhUsername']
                password = project.properties['ossrhPassword']
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

subprojects {
    junitPlatformTest.dependsOn processTestResources
}